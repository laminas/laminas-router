<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.26.1@d747f6500b38ac4f7dfc5edbcae6e4b637d7add0">
  <file src="src/Http/Chain.php">
    <InvalidReturnStatement>
      <code><![CDATA[new static(
            $options['routes'],
            $options['route_plugins'],
            $options['prototypes']
        )]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[Part]]></code>
    </InvalidReturnType>
    <MixedArgument>
      <code><![CDATA[$options['child_routes']]]></code>
      <code><![CDATA[$options['prototypes']]]></code>
      <code><![CDATA[$options['route_plugins']]]></code>
      <code><![CDATA[$options['routes']]]></code>
      <code><![CDATA[$uri->getPath()]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$uri]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[getPath]]></code>
    </MixedMethodCall>
    <MixedOperand>
      <code><![CDATA[$route->assemble($params, $chainOptions)]]></code>
    </MixedOperand>
    <PossiblyNullPropertyAssignmentValue>
      <code><![CDATA[$prototypes]]></code>
      <code><![CDATA[null]]></code>
      <code><![CDATA[null]]></code>
    </PossiblyNullPropertyAssignmentValue>
    <PropertyNotSetInConstructor>
      <code><![CDATA[Chain]]></code>
      <code><![CDATA[Chain]]></code>
    </PropertyNotSetInConstructor>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$this->chainRoutes !== null]]></code>
      <code><![CDATA[$this->chainRoutes !== null]]></code>
    </RedundantConditionGivenDocblockType>
    <TooManyArguments>
      <code><![CDATA[match]]></code>
    </TooManyArguments>
    <UnsafeInstantiation>
      <code><![CDATA[new static(
            $options['routes'],
            $options['route_plugins'],
            $options['prototypes']
        )]]></code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Http/Hostname.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$part[1]]]></code>
      <code><![CDATA[$part[1]]]></code>
    </ArgumentTypeCoercion>
    <DocblockTypeContradiction>
      <code><![CDATA[is_array($options)]]></code>
    </DocblockTypeContradiction>
    <InvalidPropertyAssignmentValue>
      <code><![CDATA[$this->assembledParams]]></code>
    </InvalidPropertyAssignmentValue>
    <MixedArgument>
      <code><![CDATA[$levelParts[$level]]]></code>
      <code><![CDATA[$options['constraints']]]></code>
      <code><![CDATA[$options['defaults']]]></code>
      <code><![CDATA[$options['route']]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[array_merge($this->defaults, $params)]]></code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess>
      <code><![CDATA[$levelParts[$level][count($levelParts[$level]) - 1]]]></code>
      <code><![CDATA[$levelParts[$level][count($levelParts[$level]) - 1][1]]]></code>
    </MixedArrayAccess>
    <MixedArrayAssignment>
      <code><![CDATA[$levelParts[$level][]]]></code>
      <code><![CDATA[$levelParts[$level][]]]></code>
      <code><![CDATA[$levelParts[$level][]]]></code>
    </MixedArrayAssignment>
    <MixedArrayOffset>
      <code><![CDATA[$params[$name]]]></code>
    </MixedArrayOffset>
    <MixedAssignment>
      <code><![CDATA[$levelParts[$level + 1]]]></code>
      <code><![CDATA[$name]]></code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code><![CDATA[Parts]]></code>
    </MixedInferredReturnType>
    <MixedMethodCall>
      <code><![CDATA[setHost]]></code>
    </MixedMethodCall>
    <MixedOperand>
      <code><![CDATA[$constraints[$part[1]]]]></code>
    </MixedOperand>
    <MixedReturnStatement>
      <code><![CDATA[$parts]]></code>
    </MixedReturnStatement>
    <PossiblyInvalidArgument>
      <code><![CDATA[$part[1]]]></code>
      <code><![CDATA[$part[1]]]></code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidArrayOffset>
      <code><![CDATA[$constraints[$part[1]]]]></code>
      <code><![CDATA[$levelParts[$level][count($levelParts[$level]) - 1]]]></code>
      <code><![CDATA[$mergedParams[$part[1]]]]></code>
      <code><![CDATA[$mergedParams[$part[1]]]]></code>
      <code><![CDATA[$this->defaults[$part[1]]]]></code>
    </PossiblyInvalidArrayOffset>
    <PossiblyInvalidCast>
      <code><![CDATA[$part[1]]]></code>
    </PossiblyInvalidCast>
    <PossiblyInvalidOperand>
      <code><![CDATA[$part[1]]]></code>
    </PossiblyInvalidOperand>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$part[2]]]></code>
    </PossiblyUndefinedArrayOffset>
    <PossiblyUnusedProperty>
      <code><![CDATA[$priority]]></code>
    </PossiblyUnusedProperty>
    <UnsafeInstantiation>
      <code><![CDATA[new static($options['route'], $options['constraints'], $options['defaults'])]]></code>
    </UnsafeInstantiation>
    <UnsupportedReferenceUsage>
      <code><![CDATA[$levelParts[$level + 1] = &$levelParts[$level][count($levelParts[$level]) - 1][1]]]></code>
    </UnsupportedReferenceUsage>
  </file>
  <file src="src/Http/HttpRouterFactory.php">
    <DeprecatedInterface>
      <code><![CDATA[HttpRouterFactory]]></code>
    </DeprecatedInterface>
    <LessSpecificReturnStatement>
      <code><![CDATA[$this->createRouter($class, $config, $container)]]></code>
    </LessSpecificReturnStatement>
    <MixedArgument>
      <code><![CDATA[$config]]></code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$config['router']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code><![CDATA[$config]]></code>
      <code><![CDATA[$config]]></code>
    </MixedAssignment>
    <MoreSpecificReturnType>
      <code><![CDATA[RouteStackInterface]]></code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/Http/Literal.php">
    <DocblockTypeContradiction>
      <code><![CDATA[is_array($options)]]></code>
    </DocblockTypeContradiction>
    <MixedArgument>
      <code><![CDATA[$options['defaults']]]></code>
      <code><![CDATA[$options['route']]]></code>
      <code><![CDATA[$path]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$path]]></code>
      <code><![CDATA[$uri]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[getPath]]></code>
    </MixedMethodCall>
    <PossiblyUnusedProperty>
      <code><![CDATA[$priority]]></code>
    </PossiblyUnusedProperty>
    <UnsafeInstantiation>
      <code><![CDATA[new static($options['route'], $options['defaults'])]]></code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Http/Method.php">
    <DocblockTypeContradiction>
      <code><![CDATA[is_array($options)]]></code>
    </DocblockTypeContradiction>
    <MixedArgument>
      <code><![CDATA[$options['defaults']]]></code>
      <code><![CDATA[$options['verb']]]></code>
      <code><![CDATA[$request->getMethod()]]></code>
    </MixedArgument>
    <PossiblyUnusedProperty>
      <code><![CDATA[$priority]]></code>
    </PossiblyUnusedProperty>
    <UnsafeInstantiation>
      <code><![CDATA[new static($options['verb'], $options['defaults'])]]></code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Http/Part.php">
    <MixedArgument>
      <code><![CDATA[$options['child_routes']]]></code>
      <code><![CDATA[$options['may_terminate']]]></code>
      <code><![CDATA[$options['prototypes']]]></code>
      <code><![CDATA[$options['route']]]></code>
      <code><![CDATA[$options['route_plugins']]]></code>
      <code><![CDATA[$this->childRoutes]]></code>
      <code><![CDATA[$this->childRoutes]]></code>
      <code><![CDATA[$uri->getPath()]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$locale]]></code>
      <code><![CDATA[$options['locale']]]></code>
      <code><![CDATA[$options['locale']]]></code>
      <code><![CDATA[$path]]></code>
      <code><![CDATA[$uri]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[getPath]]></code>
    </MixedMethodCall>
    <MixedOperand>
      <code><![CDATA[$path]]></code>
    </MixedOperand>
    <PossiblyInvalidArgument>
      <code><![CDATA[$route]]></code>
    </PossiblyInvalidArgument>
    <PossiblyNullPropertyAssignmentValue>
      <code><![CDATA[$prototypes]]></code>
    </PossiblyNullPropertyAssignmentValue>
    <PropertyNotSetInConstructor>
      <code><![CDATA[Part]]></code>
      <code><![CDATA[Part]]></code>
    </PropertyNotSetInConstructor>
    <TooManyArguments>
      <code><![CDATA[match]]></code>
      <code><![CDATA[match]]></code>
    </TooManyArguments>
    <UnsafeInstantiation>
      <code><![CDATA[new static(
            $options['route'],
            $options['may_terminate'],
            $options['route_plugins'],
            $options['child_routes'],
            $options['prototypes']
        )]]></code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Http/Placeholder.php">
    <DocblockTypeContradiction>
      <code><![CDATA[is_array($options)]]></code>
    </DocblockTypeContradiction>
    <PossiblyUnusedProperty>
      <code><![CDATA[$priority]]></code>
    </PossiblyUnusedProperty>
    <UnsafeInstantiation>
      <code><![CDATA[new static($options['defaults'])]]></code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Http/Regex.php">
    <DocblockTypeContradiction>
      <code><![CDATA[is_array($options)]]></code>
    </DocblockTypeContradiction>
    <MixedArgument>
      <code><![CDATA[$options['defaults']]]></code>
      <code><![CDATA[$options['regex']]]></code>
      <code><![CDATA[$options['spec']]]></code>
      <code><![CDATA[$path]]></code>
      <code><![CDATA[$path]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$path]]></code>
      <code><![CDATA[$uri]]></code>
      <code><![CDATA[$value]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[getPath]]></code>
    </MixedMethodCall>
    <PossiblyUnusedProperty>
      <code><![CDATA[$priority]]></code>
    </PossiblyUnusedProperty>
    <TypeDoesNotContainType>
      <code><![CDATA[is_int($key)]]></code>
      <code><![CDATA[is_numeric($key) || is_int($key)]]></code>
    </TypeDoesNotContainType>
    <UnsafeInstantiation>
      <code><![CDATA[new static($options['regex'], $options['spec'], $options['defaults'])]]></code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Http/RouteMatch.php">
    <DocblockTypeContradiction>
      <code><![CDATA[$this->matchedRouteName === null]]></code>
    </DocblockTypeContradiction>
    <PropertyNotSetInConstructor>
      <code><![CDATA[RouteMatch]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Http/Scheme.php">
    <DocblockTypeContradiction>
      <code><![CDATA[is_array($options)]]></code>
    </DocblockTypeContradiction>
    <MixedArgument>
      <code><![CDATA[$options['defaults']]]></code>
      <code><![CDATA[$options['scheme']]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$scheme]]></code>
      <code><![CDATA[$uri]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[getScheme]]></code>
      <code><![CDATA[setScheme]]></code>
    </MixedMethodCall>
    <PossiblyUnusedProperty>
      <code><![CDATA[$priority]]></code>
    </PossiblyUnusedProperty>
    <UnsafeInstantiation>
      <code><![CDATA[new static($options['scheme'], $options['defaults'])]]></code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Http/Segment.php">
    <DocblockTypeContradiction>
      <code><![CDATA[is_array($options)]]></code>
    </DocblockTypeContradiction>
    <InvalidArgument>
      <code><![CDATA[$pathOffset]]></code>
    </InvalidArgument>
    <MixedArgument>
      <code><![CDATA[$key]]></code>
      <code><![CDATA[$levelParts[$level]]]></code>
      <code><![CDATA[$locale]]></code>
      <code><![CDATA[$options['constraints']]]></code>
      <code><![CDATA[$options['defaults']]]></code>
      <code><![CDATA[$options['has_child'] ?? false]]></code>
      <code><![CDATA[$options['route']]]></code>
      <code><![CDATA[$part[1]]]></code>
      <code><![CDATA[$part[1]]]></code>
      <code><![CDATA[$part[1]]]></code>
      <code><![CDATA[$part[1]]]></code>
      <code><![CDATA[$path]]></code>
      <code><![CDATA[$path]]></code>
      <code><![CDATA[$textDomain]]></code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$levelParts[$level][count($levelParts[$level]) - 1]]]></code>
      <code><![CDATA[$levelParts[$level][count($levelParts[$level]) - 1][1]]]></code>
      <code><![CDATA[$part[0]]]></code>
      <code><![CDATA[$part[0]]]></code>
      <code><![CDATA[$part[1]]]></code>
      <code><![CDATA[$part[1]]]></code>
      <code><![CDATA[$part[1]]]></code>
      <code><![CDATA[$part[1]]]></code>
      <code><![CDATA[$part[1]]]></code>
      <code><![CDATA[$part[1]]]></code>
      <code><![CDATA[$part[1]]]></code>
      <code><![CDATA[$part[1]]]></code>
      <code><![CDATA[$part[1]]]></code>
      <code><![CDATA[$part[1]]]></code>
      <code><![CDATA[$part[1]]]></code>
      <code><![CDATA[$part[1]]]></code>
      <code><![CDATA[$part[1]]]></code>
      <code><![CDATA[$part[1]]]></code>
      <code><![CDATA[$part[1]]]></code>
      <code><![CDATA[$part[1]]]></code>
      <code><![CDATA[$part[1]]]></code>
      <code><![CDATA[$part[2]]]></code>
      <code><![CDATA[$part[2]]]></code>
    </MixedArrayAccess>
    <MixedArrayAssignment>
      <code><![CDATA[$levelParts[$level][]]]></code>
      <code><![CDATA[$levelParts[$level][]]]></code>
      <code><![CDATA[$levelParts[$level][]]]></code>
      <code><![CDATA[$levelParts[$level][]]]></code>
    </MixedArrayAssignment>
    <MixedArrayOffset>
      <code><![CDATA[$constraints[$part[1]]]]></code>
      <code><![CDATA[$constraints[$part[1]]]]></code>
      <code><![CDATA[$mergedParams[$part[1]]]]></code>
      <code><![CDATA[$mergedParams[$part[1]]]]></code>
      <code><![CDATA[$mergedParams[$part[1]]]]></code>
      <code><![CDATA[$params[$name]]]></code>
      <code><![CDATA[$this->defaults[$part[1]]]]></code>
      <code><![CDATA[$this->defaults[$part[1]]]]></code>
    </MixedArrayOffset>
    <MixedAssignment>
      <code><![CDATA[$key]]></code>
      <code><![CDATA[$levelParts[$level + 1]]]></code>
      <code><![CDATA[$locale]]></code>
      <code><![CDATA[$locale]]></code>
      <code><![CDATA[$name]]></code>
      <code><![CDATA[$part]]></code>
      <code><![CDATA[$part]]></code>
      <code><![CDATA[$path]]></code>
      <code><![CDATA[$textDomain]]></code>
      <code><![CDATA[$textDomain]]></code>
      <code><![CDATA[$uri]]></code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code><![CDATA[array]]></code>
    </MixedInferredReturnType>
    <MixedMethodCall>
      <code><![CDATA[getPath]]></code>
      <code><![CDATA[translate]]></code>
    </MixedMethodCall>
    <MixedOperand>
      <code><![CDATA[$constraints[$part[1]]]]></code>
      <code><![CDATA[$key]]></code>
      <code><![CDATA[$part[1]]]></code>
      <code><![CDATA[$part[1]]]></code>
      <code><![CDATA[$part[2]]]></code>
      <code><![CDATA[$translator->translate($part[1], $textDomain, $locale)]]></code>
    </MixedOperand>
    <MixedReturnStatement>
      <code><![CDATA[$parts]]></code>
    </MixedReturnStatement>
    <PossiblyInvalidArrayOffset>
      <code><![CDATA[$levelParts[$level][count($levelParts[$level]) - 1]]]></code>
    </PossiblyInvalidArrayOffset>
    <PossiblyUndefinedVariable>
      <code><![CDATA[$locale]]></code>
      <code><![CDATA[$textDomain]]></code>
      <code><![CDATA[$translator]]></code>
    </PossiblyUndefinedVariable>
    <PossiblyUnusedProperty>
      <code><![CDATA[$priority]]></code>
    </PossiblyUnusedProperty>
    <UnsafeInstantiation>
      <code><![CDATA[new static($options['route'], $options['constraints'], $options['defaults'])]]></code>
    </UnsafeInstantiation>
    <UnsupportedReferenceUsage>
      <code><![CDATA[$levelParts[$level + 1] = &$levelParts[$level][count($levelParts[$level]) - 1][1]]]></code>
    </UnsupportedReferenceUsage>
  </file>
  <file src="src/Http/TranslatorAwareTreeRouteStack.php">
    <DeprecatedInterface>
      <code><![CDATA[?Translator]]></code>
      <code><![CDATA[Translator]]></code>
      <code><![CDATA[Translator]]></code>
    </DeprecatedInterface>
    <LessSpecificImplementedReturnType>
      <code><![CDATA[TreeRouteStack]]></code>
      <code><![CDATA[TreeRouteStack]]></code>
      <code><![CDATA[self]]></code>
    </LessSpecificImplementedReturnType>
    <PossiblyNullPropertyAssignmentValue>
      <code><![CDATA[$translator]]></code>
    </PossiblyNullPropertyAssignmentValue>
    <PropertyNotSetInConstructor>
      <code><![CDATA[$translator]]></code>
      <code><![CDATA[TranslatorAwareTreeRouteStack]]></code>
      <code><![CDATA[TranslatorAwareTreeRouteStack]]></code>
    </PropertyNotSetInConstructor>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$this->translator !== null]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Http/TreeRouteStack.php">
    <DeprecatedClass>
      <code><![CDATA[Wildcard::class]]></code>
      <code><![CDATA[Wildcard::class]]></code>
      <code><![CDATA[Wildcard::class]]></code>
      <code><![CDATA[Wildcard::class]]></code>
      <code><![CDATA[Wildcard::class]]></code>
      <code><![CDATA[new Config([
            'aliases'   => [
                'chain'    => Chain::class,
                'Chain'    => Chain::class,
                'hostname' => Hostname::class,
                'Hostname' => Hostname::class,
                'hostName' => Hostname::class,
                'HostName' => Hostname::class,
                'literal'  => Literal::class,
                'Literal'  => Literal::class,
                'method'   => Method::class,
                'Method'   => Method::class,
                'part'     => Part::class,
                'Part'     => Part::class,
                'regex'    => Regex::class,
                'Regex'    => Regex::class,
                'scheme'   => Scheme::class,
                'Scheme'   => Scheme::class,
                'segment'  => Segment::class,
                'Segment'  => Segment::class,
                'wildcard' => Wildcard::class,
                'Wildcard' => Wildcard::class,
                'wildCard' => Wildcard::class,
                'WildCard' => Wildcard::class,
            ],
            'factories' => [
                Chain::class    => RouteInvokableFactory::class,
                Hostname::class => RouteInvokableFactory::class,
                Literal::class  => RouteInvokableFactory::class,
                Method::class   => RouteInvokableFactory::class,
                Part::class     => RouteInvokableFactory::class,
                Regex::class    => RouteInvokableFactory::class,
                Scheme::class   => RouteInvokableFactory::class,
                Segment::class  => RouteInvokableFactory::class,
                Wildcard::class => RouteInvokableFactory::class,

                // v2 normalized names
                'laminasmvcrouterhttpchain'    => RouteInvokableFactory::class,
                'laminasmvcrouterhttphostname' => RouteInvokableFactory::class,
                'laminasmvcrouterhttpliteral'  => RouteInvokableFactory::class,
                'laminasmvcrouterhttpmethod'   => RouteInvokableFactory::class,
                'laminasmvcrouterhttppart'     => RouteInvokableFactory::class,
                'laminasmvcrouterhttpregex'    => RouteInvokableFactory::class,
                'laminasmvcrouterhttpscheme'   => RouteInvokableFactory::class,
                'laminasmvcrouterhttpsegment'  => RouteInvokableFactory::class,
                'laminasmvcrouterhttpwildcard' => RouteInvokableFactory::class,
            ],
        ])]]></code>
    </DeprecatedClass>
    <DocblockTypeContradiction>
      <code><![CDATA[! is_array($routes) && ! $routes instanceof Traversable]]></code>
      <code><![CDATA[$this->baseUrl === null]]></code>
      <code><![CDATA[$this->requestUri === null]]></code>
      <code><![CDATA[$this->requestUri === null]]></code>
      <code><![CDATA[$this->requestUri === null]]></code>
      <code><![CDATA[($uri->getHost() === null || $uri->getScheme() === null) && $this->requestUri === null]]></code>
      <code><![CDATA[is_array($options)]]></code>
      <code><![CDATA[is_array($specs)]]></code>
    </DocblockTypeContradiction>
    <MixedArgument>
      <code><![CDATA[$name]]></code>
      <code><![CDATA[$options['fragment']]]></code>
      <code><![CDATA[$options['name']]]></code>
      <code><![CDATA[$options['query']]]></code>
      <code><![CDATA[$request->getBaseUrl()]]></code>
      <code><![CDATA[$uri]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$paramName]]></code>
      <code><![CDATA[$paramName]]></code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess>
      <code><![CDATA[$chainRoutes[0]['chain_routes']]]></code>
      <code><![CDATA[$chainRoutes[0]['child_routes']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code><![CDATA[$name]]></code>
      <code><![CDATA[$priority]]></code>
      <code><![CDATA[$route]]></code>
      <code><![CDATA[$route]]></code>
      <code><![CDATA[$uri]]></code>
      <code><![CDATA[$value]]></code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code><![CDATA[TRoute]]></code>
    </MixedInferredReturnType>
    <MixedMethodCall>
      <code><![CDATA[getPath]]></code>
    </MixedMethodCall>
    <MixedOperand>
      <code><![CDATA[$route->assemble(array_merge($this->defaultParams, $params), $options)]]></code>
      <code><![CDATA[$route->assemble(array_merge($this->defaultParams, $params), $options)]]></code>
    </MixedOperand>
    <MixedPropertyAssignment>
      <code><![CDATA[$route]]></code>
    </MixedPropertyAssignment>
    <MixedReturnStatement>
      <code><![CDATA[$route]]></code>
      <code><![CDATA[$route]]></code>
    </MixedReturnStatement>
    <NoInterfaceProperties>
      <code><![CDATA[$route->priority]]></code>
    </NoInterfaceProperties>
    <PossiblyInvalidArgument>
      <code><![CDATA[$route]]></code>
      <code><![CDATA[$route]]></code>
    </PossiblyInvalidArgument>
    <PossiblyNullOperand>
      <code><![CDATA[$baseUrlLength]]></code>
    </PossiblyNullOperand>
    <PossiblyUnusedMethod>
      <code><![CDATA[addPrototypes]]></code>
    </PossiblyUnusedMethod>
    <PossiblyUnusedProperty>
      <code><![CDATA[$priority]]></code>
    </PossiblyUnusedProperty>
    <PossiblyUnusedReturnValue>
      <code><![CDATA[$this]]></code>
    </PossiblyUnusedReturnValue>
    <PropertyNotSetInConstructor>
      <code><![CDATA[$baseUrl]]></code>
      <code><![CDATA[$requestUri]]></code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(string) $this->baseUrl]]></code>
    </RedundantCastGivenDocblockType>
    <TooManyArguments>
      <code><![CDATA[match]]></code>
    </TooManyArguments>
    <UndefinedMethod>
      <code><![CDATA[addPrototypes]]></code>
    </UndefinedMethod>
  </file>
  <file src="src/Http/Wildcard.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$this->keyValueDelimiter]]></code>
      <code><![CDATA[$this->paramDelimiter]]></code>
    </ArgumentTypeCoercion>
    <DocblockTypeContradiction>
      <code><![CDATA[is_array($options)]]></code>
    </DocblockTypeContradiction>
    <MixedArgument>
      <code><![CDATA[$options['defaults']]]></code>
      <code><![CDATA[$options['key_value_delimiter']]]></code>
      <code><![CDATA[$options['param_delimiter']]]></code>
      <code><![CDATA[$path]]></code>
      <code><![CDATA[$path]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$key]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$path]]></code>
      <code><![CDATA[$uri]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[getPath]]></code>
    </MixedMethodCall>
    <UnsafeInstantiation>
      <code><![CDATA[new static($options['key_value_delimiter'], $options['param_delimiter'], $options['defaults'])]]></code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Module.php">
    <UnusedClass>
      <code><![CDATA[Module]]></code>
    </UnusedClass>
  </file>
  <file src="src/RouteInvokableFactory.php">
    <DeprecatedInterface>
      <code><![CDATA[RouteInvokableFactory]]></code>
      <code><![CDATA[RouteInvokableFactory]]></code>
    </DeprecatedInterface>
    <MissingReturnType>
      <code><![CDATA[setCreationOptions]]></code>
    </MissingReturnType>
    <ParamNameMismatch>
      <code><![CDATA[$container]]></code>
      <code><![CDATA[$container]]></code>
      <code><![CDATA[$container]]></code>
      <code><![CDATA[$normalizedName]]></code>
      <code><![CDATA[$normalizedName]]></code>
      <code><![CDATA[$routeName]]></code>
      <code><![CDATA[$routeName]]></code>
      <code><![CDATA[$routeName]]></code>
    </ParamNameMismatch>
    <PossiblyUnusedMethod>
      <code><![CDATA[setCreationOptions]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="src/RouteMatch.php">
    <PropertyNotSetInConstructor>
      <code><![CDATA[$matchedRouteName]]></code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/RoutePluginManager.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$config]]></code>
      <code><![CDATA[$config['invokables']]]></code>
      <code><![CDATA[$config['invokables']]]></code>
    </ArgumentTypeCoercion>
    <DeprecatedInterface>
      <code><![CDATA[ContainerInterface|ConfigInterface]]></code>
    </DeprecatedInterface>
    <MissingReturnType>
      <code><![CDATA[validatePlugin]]></code>
    </MissingReturnType>
    <MixedArgument>
      <code><![CDATA[$config['factories']]]></code>
    </MixedArgument>
    <NonInvariantDocblockPropertyType>
      <code><![CDATA[$instanceOf]]></code>
    </NonInvariantDocblockPropertyType>
    <PossiblyUnusedMethod>
      <code><![CDATA[validatePlugin]]></code>
    </PossiblyUnusedMethod>
    <PossiblyUnusedProperty>
      <code><![CDATA[$shareByDefault]]></code>
    </PossiblyUnusedProperty>
  </file>
  <file src="src/RoutePluginManagerFactory.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$options]]></code>
    </ArgumentTypeCoercion>
    <DeprecatedInterface>
      <code><![CDATA[RoutePluginManagerFactory]]></code>
    </DeprecatedInterface>
  </file>
  <file src="src/RouteStackInterface.php">
    <PossiblyUnusedReturnValue>
      <code><![CDATA[static]]></code>
      <code><![CDATA[static]]></code>
    </PossiblyUnusedReturnValue>
  </file>
  <file src="src/RouterConfigTrait.php">
    <MixedArgument>
      <code><![CDATA[$config['router_class']]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$config['route_plugins']]]></code>
      <code><![CDATA[$routePluginManager]]></code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code><![CDATA[RouteInterface]]></code>
    </MixedInferredReturnType>
  </file>
  <file src="src/RouterFactory.php">
    <DeprecatedInterface>
      <code><![CDATA[RouterFactory]]></code>
    </DeprecatedInterface>
    <MixedInferredReturnType>
      <code><![CDATA[RouteStackInterface]]></code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$container->get('HttpRouter')]]></code>
    </MixedReturnStatement>
    <ParamNameMismatch>
      <code><![CDATA[$container]]></code>
    </ParamNameMismatch>
  </file>
  <file src="src/SimpleRouteStack.php">
    <DocblockTypeContradiction>
      <code><![CDATA[is_array($options)]]></code>
      <code><![CDATA[is_array($specs)]]></code>
    </DocblockTypeContradiction>
    <MixedArgument>
      <code><![CDATA[$name]]></code>
      <code><![CDATA[$options['default_params']]]></code>
      <code><![CDATA[$options['name']]]></code>
      <code><![CDATA[$options['name']]]></code>
      <code><![CDATA[$options['routes']]]></code>
      <code><![CDATA[$priority]]></code>
      <code><![CDATA[$route]]></code>
      <code><![CDATA[$routePluginManager]]></code>
      <code><![CDATA[$specs['options']]]></code>
      <code><![CDATA[$specs['type']]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$paramName]]></code>
      <code><![CDATA[$paramName]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$name]]></code>
      <code><![CDATA[$priority]]></code>
      <code><![CDATA[$route]]></code>
      <code><![CDATA[$route]]></code>
      <code><![CDATA[$routePluginManager]]></code>
      <code><![CDATA[$value]]></code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code><![CDATA[TRoute]]></code>
    </MixedInferredReturnType>
    <MixedPropertyAssignment>
      <code><![CDATA[$route]]></code>
    </MixedPropertyAssignment>
    <MixedReturnStatement>
      <code><![CDATA[$route]]></code>
      <code><![CDATA[$route]]></code>
    </MixedReturnStatement>
    <NoInterfaceProperties>
      <code><![CDATA[$route->priority]]></code>
    </NoInterfaceProperties>
    <PossiblyInvalidArgument>
      <code><![CDATA[$route]]></code>
    </PossiblyInvalidArgument>
    <PossiblyNullArgument>
      <code><![CDATA[$priority]]></code>
    </PossiblyNullArgument>
    <UnsafeInstantiation>
      <code><![CDATA[new static($routePluginManager)]]></code>
    </UnsafeInstantiation>
  </file>
  <file src="test/FactoryTester.php">
    <MixedArgument>
      <code><![CDATA[$exceptionMessage]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$exceptionMessage]]></code>
    </MixedAssignment>
  </file>
  <file src="test/Http/ChainTest.php">
    <DeprecatedClass>
      <code><![CDATA[Wildcard::class]]></code>
    </DeprecatedClass>
    <MissingReturnType>
      <code><![CDATA[testAssembling]]></code>
      <code><![CDATA[testFactory]]></code>
      <code><![CDATA[testMatching]]></code>
    </MissingReturnType>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$key]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$result]]></code>
      <code><![CDATA[$value]]></code>
    </MixedAssignment>
  </file>
  <file src="test/Http/HostnameTest.php">
    <DuplicateArrayKey>
      <code><![CDATA['foo' => 'bat']]></code>
    </DuplicateArrayKey>
    <MissingReturnType>
      <code><![CDATA[testAssembling]]></code>
      <code><![CDATA[testAssemblingWithMissingParameter]]></code>
      <code><![CDATA[testFactory]]></code>
      <code><![CDATA[testFailedHostnameSegmentMatchDoesNotEmitErrors]]></code>
      <code><![CDATA[testGetAssembledParams]]></code>
      <code><![CDATA[testMatching]]></code>
      <code><![CDATA[testNoMatchWithoutUriMethod]]></code>
    </MissingReturnType>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$key]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$path]]></code>
      <code><![CDATA[$value]]></code>
    </MixedAssignment>
  </file>
  <file src="test/Http/HttpRouterFactoryTest.php">
    <MissingClosureParamType>
      <code><![CDATA[$services]]></code>
    </MissingClosureParamType>
    <MissingClosureReturnType>
      <code><![CDATA[static fn($services) => new RoutePluginManager($services)]]></code>
    </MissingClosureReturnType>
    <MixedArgument>
      <code><![CDATA[$services]]></code>
    </MixedArgument>
  </file>
  <file src="test/Http/LiteralTest.php">
    <MissingReturnType>
      <code><![CDATA[testAssembling]]></code>
      <code><![CDATA[testEmptyLiteral]]></code>
      <code><![CDATA[testFactory]]></code>
      <code><![CDATA[testGetAssembledParams]]></code>
      <code><![CDATA[testMatching]]></code>
      <code><![CDATA[testNoMatchWithoutUriMethod]]></code>
    </MissingReturnType>
    <MixedAssignment>
      <code><![CDATA[$result]]></code>
    </MixedAssignment>
  </file>
  <file src="test/Http/MethodTest.php">
    <MissingReturnType>
      <code><![CDATA[testFactory]]></code>
      <code><![CDATA[testMatching]]></code>
      <code><![CDATA[testNoMatchWithoutVerb]]></code>
    </MissingReturnType>
  </file>
  <file src="test/Http/PartTest.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[new RoutePluginManager(new ServiceManager())]]></code>
    </ArgumentTypeCoercion>
    <DeprecatedClass>
      <code><![CDATA[Wildcard::class]]></code>
      <code><![CDATA[Wildcard::class]]></code>
      <code><![CDATA[Wildcard::class]]></code>
      <code><![CDATA[Wildcard::class]]></code>
      <code><![CDATA[Wildcard::class]]></code>
      <code><![CDATA[Wildcard::class]]></code>
      <code><![CDATA[Wildcard::class]]></code>
    </DeprecatedClass>
    <DuplicateArrayKey>
      <code><![CDATA['simple-match'                                     => [
                self::getRouteAlternative(),
                '/',
                null,
                null,
                [
                    'controller' => 'fo-fo',
                    'action'     => 'index',
                ],
            ]]]></code>
    </DuplicateArrayKey>
    <LessSpecificReturnStatement>
      <code><![CDATA[new RoutePluginManager(new ServiceManager(), [
            'aliases'   => [
                'literal'  => Literal::class,
                'Literal'  => Literal::class,
                'part'     => Part::class,
                'Part'     => Part::class,
                'segment'  => Segment::class,
                'Segment'  => Segment::class,
                'wildcard' => Wildcard::class,
                'Wildcard' => Wildcard::class,
                'wildCard' => Wildcard::class,
                'WildCard' => Wildcard::class,
            ],
            'factories' => [
                Literal::class  => RouteInvokableFactory::class,
                Part::class     => RouteInvokableFactory::class,
                Segment::class  => RouteInvokableFactory::class,
                Wildcard::class => RouteInvokableFactory::class,

                // v2 normalized names
                'laminasmvcrouterhttpliteral'  => RouteInvokableFactory::class,
                'laminasmvcrouterhttppart'     => RouteInvokableFactory::class,
                'laminasmvcrouterhttpsegment'  => RouteInvokableFactory::class,
                'laminasmvcrouterhttpwildcard' => RouteInvokableFactory::class,
            ],
        ])]]></code>
    </LessSpecificReturnStatement>
    <MissingReturnType>
      <code><![CDATA[testAssembleNonTerminatedRoute]]></code>
      <code><![CDATA[testAssembling]]></code>
      <code><![CDATA[testBaseRouteMayNotBePartRoute]]></code>
      <code><![CDATA[testFactory]]></code>
      <code><![CDATA[testFactoryShouldAcceptTraversableChildRoutes]]></code>
      <code><![CDATA[testGetAssembledParams]]></code>
      <code><![CDATA[testMatching]]></code>
      <code><![CDATA[testNoMatchWithoutUriMethod]]></code>
      <code><![CDATA[testPartRouteMarkedAsMayTerminateButWithQueryRouteChildWillMatchChildRoute]]></code>
      <code><![CDATA[testPartRouteMarkedAsMayTerminateCanMatchWhenQueryStringPresent]]></code>
    </MissingReturnType>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$key]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$query]]></code>
      <code><![CDATA[$query]]></code>
      <code><![CDATA[$result]]></code>
      <code><![CDATA[$value]]></code>
    </MixedAssignment>
    <MoreSpecificReturnType>
      <code><![CDATA[RoutePluginManager<RouteInterface>]]></code>
    </MoreSpecificReturnType>
    <PossiblyInvalidArgument>
      <code><![CDATA[testAssembling]]></code>
      <code><![CDATA[testMatching]]></code>
    </PossiblyInvalidArgument>
    <UnusedVariable>
      <code><![CDATA[$query]]></code>
      <code><![CDATA[$query]]></code>
      <code><![CDATA[$route]]></code>
    </UnusedVariable>
  </file>
  <file src="test/Http/PlaceholderTest.php">
    <MissingReturnType>
      <code><![CDATA[testAssembling]]></code>
      <code><![CDATA[testFactory]]></code>
      <code><![CDATA[testGetAssembledParams]]></code>
      <code><![CDATA[testMatch]]></code>
      <code><![CDATA[testPlaceholderDefault]]></code>
    </MissingReturnType>
  </file>
  <file src="test/Http/RegexTest.php">
    <MissingReturnType>
      <code><![CDATA[testAssembling]]></code>
      <code><![CDATA[testEncodedDecode]]></code>
      <code><![CDATA[testFactory]]></code>
      <code><![CDATA[testGetAssembledParams]]></code>
      <code><![CDATA[testMatching]]></code>
      <code><![CDATA[testNoMatchWithoutUriMethod]]></code>
      <code><![CDATA[testRawDecode]]></code>
    </MissingReturnType>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$key]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$result]]></code>
      <code><![CDATA[$value]]></code>
    </MixedAssignment>
    <PossiblyNullReference>
      <code><![CDATA[getParam]]></code>
      <code><![CDATA[getParam]]></code>
    </PossiblyNullReference>
  </file>
  <file src="test/Http/RouteMatchTest.php">
    <MissingReturnType>
      <code><![CDATA[testLengthIsMerged]]></code>
      <code><![CDATA[testLengthIsStored]]></code>
      <code><![CDATA[testMatchedRouteNameIsOverriddenOnMerge]]></code>
      <code><![CDATA[testMatchedRouteNameIsPrependedWhenAlreadySet]]></code>
      <code><![CDATA[testMatchedRouteNameIsSet]]></code>
      <code><![CDATA[testParamsAreStored]]></code>
    </MissingReturnType>
  </file>
  <file src="test/Http/SchemeTest.php">
    <MissingReturnType>
      <code><![CDATA[testAssembling]]></code>
      <code><![CDATA[testFactory]]></code>
      <code><![CDATA[testGetAssembledParams]]></code>
      <code><![CDATA[testMatching]]></code>
      <code><![CDATA[testNoMatchWithoutUriMethod]]></code>
      <code><![CDATA[testNoMatchingOnDifferentScheme]]></code>
    </MissingReturnType>
    <MixedAssignment>
      <code><![CDATA[$path]]></code>
    </MixedAssignment>
  </file>
  <file src="test/Http/SegmentTest.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$exceptionName]]></code>
    </ArgumentTypeCoercion>
    <InvalidArgument>
      <code><![CDATA[$offset]]></code>
      <code><![CDATA[$offset]]></code>
    </InvalidArgument>
    <MissingReturnType>
      <code><![CDATA[assemblingWithL10n]]></code>
      <code><![CDATA[matchingWithL10n]]></code>
      <code><![CDATA[testAssemblingWithExistingChild]]></code>
      <code><![CDATA[testAssemblingWithMissingParameterInRoot]]></code>
      <code><![CDATA[testEncodeCache]]></code>
      <code><![CDATA[testEncodedDecode]]></code>
      <code><![CDATA[testFactory]]></code>
      <code><![CDATA[testNoMatchWithoutUriMethod]]></code>
      <code><![CDATA[testParseExceptions]]></code>
      <code><![CDATA[testRawDecode]]></code>
      <code><![CDATA[testTranslatedAssemblingThrowsExceptionWithoutTranslator]]></code>
      <code><![CDATA[testTranslatedMatchingThrowsExceptionWithoutTranslator]]></code>
    </MissingReturnType>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$key]]></code>
      <code><![CDATA[$key]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$path]]></code>
      <code><![CDATA[$result]]></code>
      <code><![CDATA[$result]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
    </MixedAssignment>
    <NullArgument>
      <code><![CDATA[null]]></code>
      <code><![CDATA[null]]></code>
      <code><![CDATA[null]]></code>
    </NullArgument>
    <PossiblyNullReference>
      <code><![CDATA[getParam]]></code>
      <code><![CDATA[getParam]]></code>
    </PossiblyNullReference>
  </file>
  <file src="test/Http/TestAsset/DummyRoute.php">
    <UnsafeInstantiation>
      <code><![CDATA[new static()]]></code>
    </UnsafeInstantiation>
  </file>
  <file src="test/Http/TreeRouteStackTest.php">
    <MissingReturnType>
      <code><![CDATA[testAddRouteAcceptsTraversable]]></code>
      <code><![CDATA[testAddRouteRequiresHttpSpecificRoute]]></code>
      <code><![CDATA[testAddRouteViaStringRequiresHttpSpecificRoute]]></code>
      <code><![CDATA[testAssemble]]></code>
      <code><![CDATA[testAssembleCanonicalUriWithGivenUri]]></code>
      <code><![CDATA[testAssembleCanonicalUriWithHostnameRoute]]></code>
      <code><![CDATA[testAssembleCanonicalUriWithHostnameRouteAndRequestUriWithoutScheme]]></code>
      <code><![CDATA[testAssembleCanonicalUriWithHostnameRouteWithoutScheme]]></code>
      <code><![CDATA[testAssembleCanonicalUriWithRequestUri]]></code>
      <code><![CDATA[testAssembleCanonicalUriWithoutRequestUri]]></code>
      <code><![CDATA[testAssembleNonExistentChildRoute]]></code>
      <code><![CDATA[testAssembleNonExistentRoute]]></code>
      <code><![CDATA[testAssembleWithEncodedPath]]></code>
      <code><![CDATA[testAssembleWithEncodedPathAndQueryParams]]></code>
      <code><![CDATA[testAssembleWithFragment]]></code>
      <code><![CDATA[testAssembleWithQueryParams]]></code>
      <code><![CDATA[testAssembleWithScheme]]></code>
      <code><![CDATA[testAssembleWithoutNameOption]]></code>
      <code><![CDATA[testBaseUrlLengthIsPassedAsOffset]]></code>
      <code><![CDATA[testChainRouteAssembling]]></code>
      <code><![CDATA[testChainRouteAssemblingWithChildrenAndSecureScheme]]></code>
      <code><![CDATA[testDefaultParamDoesNotOverrideParam]]></code>
      <code><![CDATA[testDefaultParamDoesNotOverrideParamForAssembling]]></code>
      <code><![CDATA[testDefaultParamIsAddedToMatch]]></code>
      <code><![CDATA[testDefaultParamIsUsedForAssembling]]></code>
      <code><![CDATA[testFactory]]></code>
      <code><![CDATA[testNoMatchWithoutUriMethod]]></code>
      <code><![CDATA[testNoOffsetIsPassedWithoutBaseUrl]]></code>
      <code><![CDATA[testPriorityIsPassedToPartRoute]]></code>
      <code><![CDATA[testPrototypeRoute]]></code>
      <code><![CDATA[testSetBaseUrl]]></code>
      <code><![CDATA[testSetBaseUrlFromFirstMatch]]></code>
      <code><![CDATA[testSetRequestUri]]></code>
    </MissingReturnType>
    <MixedAssignment>
      <code><![CDATA[$routes]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[get]]></code>
    </MixedMethodCall>
    <MixedPropertyFetch>
      <code><![CDATA[$routes->get('foo')->priority]]></code>
    </MixedPropertyFetch>
    <PossiblyNullReference>
      <code><![CDATA[getParam]]></code>
      <code><![CDATA[getParam]]></code>
      <code><![CDATA[getParam]]></code>
      <code><![CDATA[getParam]]></code>
    </PossiblyNullReference>
    <UnusedMethodCall>
      <code><![CDATA[setAccessible]]></code>
    </UnusedMethodCall>
  </file>
  <file src="test/Http/WildcardTest.php">
    <DeprecatedClass>
      <code><![CDATA[Wildcard]]></code>
      <code><![CDATA[Wildcard]]></code>
      <code><![CDATA[Wildcard::class]]></code>
      <code><![CDATA[array<string, array{
     *     0: Wildcard,
     *     1: string,
     *     2: null|int,
     *     3: array<string, string|int|float>
     * }>]]></code>
      <code><![CDATA[new Wildcard('-')]]></code>
      <code><![CDATA[new Wildcard('-')]]></code>
      <code><![CDATA[new Wildcard('/', '-')]]></code>
      <code><![CDATA[new Wildcard('/', '/', ['foo' => 'baz'])]]></code>
      <code><![CDATA[new Wildcard()]]></code>
      <code><![CDATA[new Wildcard()]]></code>
      <code><![CDATA[new Wildcard()]]></code>
      <code><![CDATA[new Wildcard()]]></code>
      <code><![CDATA[new Wildcard()]]></code>
      <code><![CDATA[new Wildcard()]]></code>
      <code><![CDATA[new Wildcard()]]></code>
      <code><![CDATA[new Wildcard()]]></code>
      <code><![CDATA[new Wildcard()]]></code>
      <code><![CDATA[new Wildcard()]]></code>
      <code><![CDATA[new Wildcard()]]></code>
    </DeprecatedClass>
    <LessSpecificReturnStatement>
      <code><![CDATA[[
            'simple-match'                       => [
                new Wildcard(),
                '/foo/bar/baz/bat',
                null,
                ['foo' => 'bar', 'baz' => 'bat'],
            ],
            'empty-match'                        => [
                new Wildcard(),
                '',
                null,
                [],
            ],
            'no-match-without-leading-delimiter' => [
                new Wildcard(),
                '/foo/foo/bar/baz/bat',
                5,
                null,
            ],
            'no-match-with-trailing-slash'       => [
                new Wildcard(),
                '/foo/bar/baz/bat/',
                null,
                null,
            ],
            'match-overrides-default'            => [
                new Wildcard('/', '/', ['foo' => 'baz']),
                '/foo/bat',
                null,
                ['foo' => 'bat'],
            ],
            'offset-skips-beginning'             => [
                new Wildcard(),
                '/bat/foo/bar',
                4,
                ['foo' => 'bar'],
            ],
            'non-standard-key-value-delimiter'   => [
                new Wildcard('-'),
                '/foo-bar/baz-bat',
                null,
                ['foo' => 'bar', 'baz' => 'bat'],
            ],
            'non-standard-parameter-delimiter'   => [
                new Wildcard('/', '-'),
                '/foo/-foo/bar-baz/bat',
                5,
                ['foo' => 'bar', 'baz' => 'bat'],
            ],
            'empty-values-with-non-standard-key-value-delimiter-are-omitted' => [
                new Wildcard('-'),
                '/foo',
                null,
                [],
                true,
            ],
            'url-encoded-parameters-are-decoded'                             => [
                new Wildcard(),
                '/foo/foo%20bar',
                null,
                ['foo' => 'foo bar'],
            ],
            'params-contain-non-string-scalar-values'                        => [
                new Wildcard(),
                '/int_param/42/float_param/4.2',
                null,
                ['int_param' => 42, 'float_param' => 4.2],
            ],
        ]]]></code>
    </LessSpecificReturnStatement>
    <MissingReturnType>
      <code><![CDATA[testAssembling]]></code>
      <code><![CDATA[testEncodedDecode]]></code>
      <code><![CDATA[testFactory]]></code>
      <code><![CDATA[testGetAssembledParams]]></code>
      <code><![CDATA[testMatching]]></code>
      <code><![CDATA[testNoMatchWithoutUriMethod]]></code>
      <code><![CDATA[testPathAssemblyShouldSkipAnyNonScalarValues]]></code>
      <code><![CDATA[testRawDecode]]></code>
    </MissingReturnType>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$key]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$path]]></code>
      <code><![CDATA[$result]]></code>
      <code><![CDATA[$value]]></code>
    </MixedAssignment>
    <MoreSpecificReturnType>
      <code><![CDATA[array<string, array{
     *     0: Wildcard,
     *     1: string,
     *     2: null|int,
     *     3: array<string, string|int|float>
     * }>]]></code>
    </MoreSpecificReturnType>
    <PossiblyNullReference>
      <code><![CDATA[getParam]]></code>
      <code><![CDATA[getParam]]></code>
    </PossiblyNullReference>
    <UndefinedClass>
      <code><![CDATA[ConnectMiddleware]]></code>
      <code><![CDATA[Handler]]></code>
    </UndefinedClass>
  </file>
  <file src="test/PriorityListTest.php">
    <MissingReturnType>
      <code><![CDATA[testClear]]></code>
      <code><![CDATA[testGet]]></code>
      <code><![CDATA[testInsert]]></code>
      <code><![CDATA[testLIFOOnly]]></code>
      <code><![CDATA[testLIFOWithPriority]]></code>
      <code><![CDATA[testPriorityOnly]]></code>
      <code><![CDATA[testPriorityWithNegativesAndNull]]></code>
      <code><![CDATA[testRemove]]></code>
      <code><![CDATA[testRemovingNonExistentRouteDoesNotYieldError]]></code>
    </MissingReturnType>
    <NullArgument>
      <code><![CDATA[null]]></code>
    </NullArgument>
  </file>
  <file src="test/RouteMatchTest.php">
    <MissingReturnType>
      <code><![CDATA[testGetNonExistentParamWithDefault]]></code>
      <code><![CDATA[testGetNonExistentParamWithoutDefault]]></code>
      <code><![CDATA[testGetParam]]></code>
      <code><![CDATA[testMatchedRouteNameIsSet]]></code>
      <code><![CDATA[testParamsAreStored]]></code>
      <code><![CDATA[testSetParam]]></code>
    </MissingReturnType>
  </file>
  <file src="test/RoutePluginManagerFactoryTest.php">
    <DeprecatedMethod>
      <code><![CDATA[createService]]></code>
    </DeprecatedMethod>
    <MissingClosureParamType>
      <code><![CDATA[$container]]></code>
    </MissingClosureParamType>
    <MissingClosureReturnType>
      <code><![CDATA[fn($container) => $this->createMock(RouteInterface::class)]]></code>
    </MissingClosureReturnType>
    <MissingReturnType>
      <code><![CDATA[testCreateServiceReturnsAPluginManager]]></code>
      <code><![CDATA[testInvocationCanProvideOptionsToThePluginManager]]></code>
      <code><![CDATA[testInvocationReturnsAPluginManager]]></code>
    </MissingReturnType>
    <PossiblyInvalidArgument>
      <code><![CDATA[$this->container]]></code>
      <code><![CDATA[$this->container]]></code>
    </PossiblyInvalidArgument>
    <UnusedClosureParam>
      <code><![CDATA[$container]]></code>
    </UnusedClosureParam>
  </file>
  <file src="test/RoutePluginManagerTest.php">
    <MissingReturnType>
      <code><![CDATA[testCanLoadAnyRoute]]></code>
      <code><![CDATA[testLoadNonExistentRoute]]></code>
    </MissingReturnType>
  </file>
  <file src="test/RouterFactoryTest.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[array_merge_recursive($this->defaultServiceConfig, [
            'services' => [
                'config' => [
                    'router' => [
                        'router_class' => TestAsset\Router::class,
                    ],
                ],
            ],
        ])]]></code>
      <code><![CDATA[array_merge_recursive($this->defaultServiceConfig, [
            'services' => [
                'config' => [
                    'router' => [
                        'router_class' => TestAsset\Router::class,
                    ],
                ],
            ],
        ])]]></code>
    </ArgumentTypeCoercion>
    <DeprecatedClass>
      <code><![CDATA[new Config(array_merge_recursive($this->defaultServiceConfig, [
            'services' => [
                'config' => [
                    'router' => [
                        'router_class' => TestAsset\Router::class,
                    ],
                ],
            ],
        ]))]]></code>
      <code><![CDATA[new Config(array_merge_recursive($this->defaultServiceConfig, [
            'services' => [
                'config' => [
                    'router' => [
                        'router_class' => TestAsset\Router::class,
                    ],
                ],
            ],
        ]))]]></code>
    </DeprecatedClass>
    <MissingClosureParamType>
      <code><![CDATA[$services]]></code>
    </MissingClosureParamType>
    <MissingClosureReturnType>
      <code><![CDATA[static fn($services) => new RoutePluginManager($services)]]></code>
    </MissingClosureReturnType>
    <MixedArgument>
      <code><![CDATA[$services]]></code>
    </MixedArgument>
  </file>
  <file src="test/SimpleRouteStackTest.php">
    <ArgumentTypeCoercion>
      <code><![CDATA['Traversable']]></code>
    </ArgumentTypeCoercion>
    <DeprecatedProperty>
      <code><![CDATA[$route->priority]]></code>
    </DeprecatedProperty>
    <InvalidArgument>
      <code><![CDATA['foo']]></code>
      <code><![CDATA['foo']]></code>
    </InvalidArgument>
    <MissingReturnType>
      <code><![CDATA[testAddRouteAsArrayWithOptions]]></code>
      <code><![CDATA[testAddRouteAsArrayWithPriority]]></code>
      <code><![CDATA[testAddRouteAsArrayWithoutOptions]]></code>
      <code><![CDATA[testAddRouteAsArrayWithoutType]]></code>
      <code><![CDATA[testAddRouteAsTraversable]]></code>
      <code><![CDATA[testAddRouteWithInvalidArgument]]></code>
      <code><![CDATA[testAddRouteWithPriority]]></code>
      <code><![CDATA[testAddRoutesAsArray]]></code>
      <code><![CDATA[testAddRoutesAsTraversable]]></code>
      <code><![CDATA[testAddRoutesWithInvalidArgument]]></code>
      <code><![CDATA[testAssemble]]></code>
      <code><![CDATA[testAssembleNonExistentRoute]]></code>
      <code><![CDATA[testAssembleWithoutNameOption]]></code>
      <code><![CDATA[testDefaultParamDoesNotOverrideParam]]></code>
      <code><![CDATA[testDefaultParamDoesNotOverrideParamForAssembling]]></code>
      <code><![CDATA[testDefaultParamIsAddedToMatch]]></code>
      <code><![CDATA[testDefaultParamIsUsedForAssembling]]></code>
      <code><![CDATA[testFactory]]></code>
      <code><![CDATA[testGetRouteByName]]></code>
      <code><![CDATA[testGetRoutes]]></code>
      <code><![CDATA[testHasRoute]]></code>
      <code><![CDATA[testSetRoutePluginManager]]></code>
      <code><![CDATA[testSetRoutesAsArray]]></code>
      <code><![CDATA[testSetRoutesAsTraversable]]></code>
      <code><![CDATA[testSetRoutesWithInvalidArgument]]></code>
      <code><![CDATA[testremoveRouteAsArray]]></code>
    </MissingReturnType>
    <NoInterfaceProperties>
      <code><![CDATA[$route->priority]]></code>
    </NoInterfaceProperties>
    <PossiblyNullReference>
      <code><![CDATA[getParam]]></code>
      <code><![CDATA[getParam]]></code>
      <code><![CDATA[getParam]]></code>
      <code><![CDATA[getParam]]></code>
    </PossiblyNullReference>
  </file>
  <file src="test/TestAsset/DummyRoute.php">
    <PossiblyUnusedProperty>
      <code><![CDATA[$priority]]></code>
    </PossiblyUnusedProperty>
    <UnsafeInstantiation>
      <code><![CDATA[new static()]]></code>
    </UnsafeInstantiation>
  </file>
  <file src="test/TestAsset/Router.php">
    <ImplementedReturnTypeMismatch>
      <code><![CDATA[RouteMatch|null]]></code>
    </ImplementedReturnTypeMismatch>
    <InvalidReturnType>
      <code><![CDATA[mixed]]></code>
    </InvalidReturnType>
    <UndefinedDocblockClass>
      <code><![CDATA[RouteMatch|null]]></code>
    </UndefinedDocblockClass>
    <UnsafeInstantiation>
      <code><![CDATA[new static()]]></code>
    </UnsafeInstantiation>
  </file>
</files>
